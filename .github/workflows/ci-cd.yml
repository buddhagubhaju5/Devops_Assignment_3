name:  Build Docker Image and deploy

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    - name: Build Docker image
      run: docker build -t devops_assignment_3 .

    - name: Run tests
      run: docker run ${{ secrets.DOCKER_USERNAME }}/devops_assignment_3 npm test

    - name: Log in to Docker Hub
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      run: echo $DOCKER_TOKEN | docker login -u $DOCKER_USERNAME --password-stdin

    - name: Tag Docker image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/devops_assignment_3:latest

    - name: Push Docker image to Docker Hub
      run: docker push ${{ secrets.DOCKER_USERNAME }}/devops_assignment_3:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Deploy to ECS
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: 'us-east-2'
      run: |
        aws ecs update-service --cluster devopsassignment3cluster --service my-service --force-new-deployment

    - name: eks cluster
      run: |
          eksctl create cluster --name my-cluster --region us-east-2 --nodegroup-name standard --node-type t2.medium --nodes 2
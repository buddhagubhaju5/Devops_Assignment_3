name: Build Docker Image and Deploy

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/devops_assignment_3 .

    - name: Run tests
      run: docker run ${{ secrets.DOCKER_USERNAME }}/devops_assignment_3 npm test

    - name: Log in to Docker Hub
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      run: echo $DOCKER_TOKEN | docker login -u $DOCKER_USERNAME --password-stdin

    - name: Push Docker image to Docker Hub
      run: docker push ${{ secrets.DOCKER_USERNAME }}/devops_assignment_3:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - run: |
        aws ecs update-service --cluster devopsassignment3cluster --service my-service --force-new-deployment

    - name: Update kubeconfig for EKS
      run: aws eks --region us-east-2 update-kubeconfig --name devopsassignment3cluster

    - name: Apply Kubernetes Deployment
      run: kubectl apply -f deploy.yaml

    - name: Apply Kubernetes Service
      run: kubectl apply -f service.yaml

    - name: Get Kubernetes Services
      run: kubectl get services


